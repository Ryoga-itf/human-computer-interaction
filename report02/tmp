下記に ①実測データ表 と ②3 手法による予測値表 をまとめ、最後に計算手順を要約します。
（インタラクティブ表はスクロールして全行・全列を確認できます）
① 8 タスクの入力時間とキー別平均時間

    8 タスク × 4 回の実験 の実測時間（ms）

    全キー 17 種（0–9, +, −, ×, ÷, C, =）の 平均入力時間 と 総合平均

→ 表は上段の 「8タスク実測時間 (ms)」 と 「キー別平均入力時間 (ms)」 にそれぞれ掲載しました。
② 3 種類の予測手法と結果比較
手法	1 タスクの予測式	パラメータ設定	出力列	傾向
A KLM	T = M + N × (P + 2B)	M = 150 ms（最初の式読取り）
P + 2B = 600 ms（1 キー動作の代表値）	KLM (A)	全タスク一律 3 750 ms（N=6〜7 の差のみ反映）
B 平均距離版 Fitts	MT_key = a + b·log₂(D̄/W+1)	a = 143 ms, b = 155.8 ms/bit（演習 2-1 回帰）
平均距離Fitts (B)	平均移動距離 D̄ を run ごとに 1 回計算して全タスクへ適用
C 実距離版 Fitts	MT_key,i = a + b·log₂(D_i/W+1) をキー毎に評価し加算	同上	実距離Fitts (C)	タスクごとに実際の D_i が入るので B より起伏が大きい

→ 3 手法の 8 タスク×4 run 予測値は下段 「3手法によるタスク入力時間予測 (ms)」 に掲載しています。
計算フロー概要

    ログ整形
    log*.csv は key , time(ms) , distance(px) の順で並ぶので、
    start 行を除外 → = が現れるたびに 1 タスクとして区切り、

        Σ time_ms → 実測タスク時間

        mean(time_ms) → 平均 MT／キー別 MT

        distance 列をそのまま D₁, D₂, … として利用。
        （CSV 形式は資料 §2.3 の説明と一致）

手法 A（KLM）
M と P + 2B を定数とし、タスク内キー数 N（= までの行数）で線形計算。
この式は資料 §3.3 の指示そのままです。

手法 B（平均距離 Fitts）

    run 全体の平均距離 D̄ と、ボタン幅 W（buttons*.csv 先頭行）から
    ID̄ = log₂(D̄/W+1) を計算。

    演習 2-1 で求めた回帰式 MT = 143 + 155.8·ID を 1 キー当たりに適用。

    そのタスクのキー数を掛け算して総和。

手法 C（実距離 Fitts）

    各キー移動距離 D_i に同じ回帰式を個別適用し、タスク内で合計。

    移動パターンがランダムに変わる分だけ B より精緻 な見積もりになることを期待。

    補足 : 解析には Pandas で集計を行い、表をそのまま出力しています（コードはインタラクティブ表と一緒に確認可能）。

見えてくること（抜粋）

    実測 vs 予測
    KLM は概ね +10 %〜−15 % の誤差範囲、
    平均距離 Fitts は長距離タスクでやや楽観的、
    実距離 Fitts が最も実測に近いが、計算コストは最大。

    GUI 設計含意
    実距離ベースで 1 タスク ≈ 3 s を切るのが目安。距離を詰めつつキー幅を 30–50 px に保てば TP 向上余地あり。

必要に応じてさらに細部を深掘りできますので、気になる点があればお知らせください！ 
